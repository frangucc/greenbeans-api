.span12.no-lmargin
  %h3 Greenbeans API Documentation
.span12.no-lmargin.mb20
  %h4.span12.no-lmargin.mb10 Merchant
  %h5.span12.mb10 Registrations Controller
  .span12.mb20
    .span4
      %h3 Create
      %p Register a new merchant.
      %p Type: POST
      %p Url: POST 'http://107.20.196.96/api/merchant/registrations.json

    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST 'http://107.20.196.96/api/merchant/registrations.json' -d 'merchant[name]=Francesco%20Pinto&merchant[email]=fran@greenbean.com&merchant[password]=password'
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Register successfully
        %br
        %strong 205:
        Register fail
      .span6.word_wrap
        {"status":200,"merchant":{"created_at":"2013-01-21T07:26:09Z","email":"fran@greenbean.com","id":5,"name":"Francesco Pinto","updated_at":"2013-01-21T07:26:09Z"}}
        
  %h5.span12.mb10 Sessions Controller
  .span12.mb20
    .span4
      %h3 login
      %p Almost all the calls which need authentication requires a auth_token, which is returned by this call.
      %p merchant[email]: mandatory field. Merchant email
      %p merchant[password]: mandatory field. Merchant password
      %p Type: POST
      %p Url: POST 'http://107.20.196.96/api/merchant/sessions.json

    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST 'http://107.20.196.96/api/merchant/sessions.json' -d 'merchant[email]=fran@greenbean.com&merchant[password]=password'
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        login successfully
        %br
        %strong 205:
        authenticate fail
      .span6.word_wrap
        {"status":200,"merchant":{"id":1,"email":"fran@greenbean.com","name":"fran","reset_password_sent_at":null,"remember_created_at":null,"sign_in_count":1,"current_sign_in_at":"2013-01-14T12:59:53Z","last_sign_in_at":"2013-01-14T12:59:53Z","current_sign_in_ip":"115.74.201.253","last_sign_in_ip":"115.74.201.253","authentication_token":"BKEWvqffyrc9m4khuNgw","created_at":"2013-01-14T12:32:05Z","updated_at":"2013-01-14T12:59:53Z","auth_token":"BKEWvqffyrc9m4khuNgw"},"message":"Sign in successfully."}
  .span12.mt20
    .span4
      %h3 logout
      %p auth_token: mandatory parameter. The auth_token was provided by the app with Login call
      %p Type: POST
      %p Url: http://107.20.196.96/api/merchant/sessions/delete.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST "http://107.20.196.96/api/merchant/sessions/delete.json" -d "auth_token="
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        logout successfully
        %br
        %strong 205:
        Not authorize
  
  %h5.span12.mb10 Passwords Controller
  .span12.mb20
    .span4
      %h3 Reset Password
      %p This call send an instruction email to reset password, This email content a link to reset password.
      %p auth_token: mandatory parameter.
      %p beans_count: the quantity of beans generated.
      %p Type: POST
      %p Url: http://107.20.196.96/api/merchant/passwords.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST "http://107.20.196.96/api/merchant/passwords.json" -d "merchant[email]=fran@greenbean.com"
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Send email successfully
        %br
        %strong 205:
        Send email fail
        
  .span12.no-lmargin.mb20
    %h5.span12.mb10 Tokens Controller
    .span12.mb20
      .span4
        %h3 Create token
        %p This call create a token, and generate beans which belong to this token. This API call requires authentication, with auth_token from the LOGIN call.
        %p auth_token: mandatory parameter.
        %p beans_count: the quantity of beans generated.
        %p Type: POST
        %p Url: http://107.20.196.96/api/merchant/tokens.json
        %p This call return the token's code (5 characters code, with alpha-numeric characters)
      .span7
        .w_100 EXAMPLE
        .span7.mb20 curl -X POST "http://107.20.196.96/api/merchant/tokens.json" -d "auth_token=uLYpXcn2qYNXhhsYu4SF&beans_count=3"
        .w_100.mt20
          STATUS CODE SUMMARY
        .span6
          %strong 200:
          create token successfully
          %br
          %strong 205:
          Create token fail
    .span12.mt20
      .span4
        %h3 List beans
        %p Returns beans belongs to a token. We send a token code the the app, and get a list of beans' codes associated with this token.
        %p auth_token: mandatory params.
        %p code: token's code.
        %p Type: GET
        %p Url: http://107.20.196.96/api/merchant/tokens/beans.json
      .span7
        .w_100 EXAMPLE
        .span7.mb20
          curl "http://107.20.196.96/api/merchant/tokens/beans.json?auth_token=uLYpXcn2qYNXhhsYu4SF&code=LI6FK"
        .w_100.mt20
          STATUS CODE SUMMARY
        .span6
          %strong 200:
          OK
          %br
          %strong 205:
          Token not found

  .span12.no-lmargin.mb20
    %h5.span12.mb10 Raffles Controller
    .span12.mb20
      .span4
        %h3 Create Raffle
        %p This call create a raffle. This API call requires authentication, with auth_token from the LOGIN call.
        %p auth_token: mandatory parameter.
        %p Type: POST
        %p Url: http://107.20.196.96/api/merchant/raffles.json

      .span7
        .w_100 EXAMPLE
        .span7.mb20 curl -X POST 'http://107.20.196.96/api/merchant/raffles.json' -d 'raffle[name]=First%20Raffle&raffle[num_of_winner]=3&auth_token=yQsrjn55GJweW6S6wzy9'
        .w_100.mt20
          STATUS CODE SUMMARY
        .span6
          %strong 200:
          Create successfully
          %br
          %strong 205:
          Create fail
        .span6.word_wrap
          {"status":200,"raffle":{"id":2,"num_of_winner":3,"name":"First Raffle","description":null,"drawing_time":null,"repeat":null,"instructions":null,"merchant_id":1,"created_at":"2013-01-21T07:52:56Z","updated_at":"2013-01-21T07:52:56Z"}}
    .span12.mb20
      .span4
        %h3 Update Raffle
        %p This call create a raffle. This API call requires authentication, with auth_token from the LOGIN call.
        %p auth_token: mandatory parameter.
        %p Type: PUT
        %p Url: http://107.20.196.96/api/merchant/raffles/(:id).json

      .span7
        .w_100 EXAMPLE
        .span7.mb20 curl -X PUT 'http://107.20.196.96/api/merchant/raffles/2.json' -d 'raffle[name]=Test%20Raffle&auth_token=XddHyJLLy19QsggNWnyA'
        .w_100.mt20
          STATUS CODE SUMMARY
        .span6
          %strong 200:
          Update successfully
          %br
          %strong 205:
          Update fail
        .span6.word_wrap
    .span12.mb20
      .span4
        %h3 Delete Raffle
        %p This call delete a raffle. This API call requires authentication, with auth_token from the LOGIN call.
        %p auth_token: mandatory parameter.
        %p Type: DELETE
        %p Url: http://107.20.196.96/api/merchant/raffles/(:id).json

      .span7
        .w_100 EXAMPLE
        .span7.mb20 curl -X DELETE 'http://107.20.196.96/api/merchant/raffles/2.json' -d 'auth_token=XddHyJLLy19QsggNWnyA'
        .w_100.mt20
          STATUS CODE SUMMARY
        .span6
          %strong 200:
          Delete successfully
          %br
          %strong 205:
          Delete fail
        .span6.word_wrap
        
      
      
.span12.no-lmargin.mb20
  %h4.span12.no-lmargin.mb10 Consumer
  %h5.span12.mb10 Registrations Controller
  .span12.mb20
    .span4
      %h3 Create
      %p Register a new Consumer.
      %p Type: POST
      %p Url: POST 'http://107.20.196.96/api/consumer/registrations.json

    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST 'http://107.20.196.96/api/consumer/registrations.json' -d 'user[email]=fran@greenbean.com&user[password]=password'
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Register successfully
        %br
        %strong 205:
        Register fail
      .span6.word_wrap
        {"status":200,"consumer":{"created_at":"2013-01-21T07:30:38Z","email":"fran@greenbean.com","id":2,"updated_at":"2013-01-21T07:30:38Z"}}
        
  %h5.span12.mb10 Sessions Controller
  .span12.mb20
    .span4
      %h3 login
      %p This is Login call for Consumer iOS app. It returns a auth_token, which is used for all API calls which requires authentication.
      %p user[email]: email of Consumer
      %p user[password]: Consumer's password
      %p Type: POST
      %p Url: http://107.20.196.96/api/consumer/sessions.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST 'http://107.20.196.96/api/consumer/sessions.json' -d 'user[email]=bhanu@greenbean.com&user[password]=password'
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        login successfully
        %br
        %strong 205:
        authenticate fail
  .span12.mt20
    .span4
      %h3 Logout
      %p This call logs out a Consumer from the app.
      %p auth_token: mandatory parameter
      %p Type: POST
      %p Url: http://107.20.196.96/api/consumer/sessions/delete.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST 'http://107.20.196.96/api/consumer/sessions/delete.json' -d 'auth_token='
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        logout successfully
        %br
        %strong 205:
        Not authorize
  %h5.span12.mb10 Passwords Controller
  .span12.mb20
    .span4
      %h3 Reset Password
      %p This call send an instruction email to reset password, This email content a link to reset password.
      %p auth_token: mandatory parameter.
      %p beans_count: the quantity of beans generated.
      %p Type: POST
      %p Url: http://107.20.196.96/api/consumer/passwords.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl -X POST "http://107.20.196.96/api/consumer/passwords.json" -d "user[email]=fran@greenbean.com"
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Send email successfully
        %br
        %strong 205:
        Send email fail
      
  %h5.span12.mb10 Beans Controller
  .span12.mb20
    .span4
      %h3 Validate Valid of Bean
      %p Return beans code list for consumer. This API call requires authentication, with auth_token from the LOGIN call.
      %p Type: GET
      %p Url: http://107.20.196.96/api/consumer/beans/my_beans.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl 'http://107.20.196.96/api/consumer/beans/my_beans.json
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Response successfully
        %br
        %strong 205:
        User has no beans
      .span6.word_wrap
        {"status":200,"actives":["UYETLG","NEG6YD","IWH2RA","1S3APT","MCRBCA","1HW376"],"redeemeds":["6ZJ11K","UYETLG","Q27F9E","1S3APT","49C4CO","S79B0U","MCRBCA","NOF6CE","1HW376","ZXZUJS"],"on_raffles":["RFJQRF","6ZJ11K","HV5MKM","49C4CO","S79B0U","NOF6CE","X2L1VH","UTI3WN"]}
  .span12.mb20
    .span4
      %h3 Validate Valid of Bean
      %p Consumer app will use this bean to validate if a code is valid or not. Code maybe not valid because wrong of code, or had been used.
      %p code: mandatory parameter. Bean code for validation
      %p Type: GET
      %p Url: http://107.20.196.96/api/consumer/beans/validate.json
    .span7
      .w_100 EXAMPLE
      .span7.mb20 curl  'http://107.20.196.96/api/consumer/beans/validate.json?code='
      .w_100.mt20
        STATUS CODE SUMMARY
      .span6
        %strong 200:
        Code is valid
        %br
        %strong 205:
        Code is invalid. Please examine message field for the reason.

